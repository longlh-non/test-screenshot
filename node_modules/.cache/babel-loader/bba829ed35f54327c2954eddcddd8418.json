{"ast":null,"code":"import html2canvas from 'html2canvas';\n/* eslint-disable no-unused-vars */\n\nvar test;\nexport default {\n  data() {\n    return {\n      crossHairsLeft: 0,\n      crossHairsTop: 0,\n      startX: 0,\n      startY: 0,\n      isMouseDown: false,\n      isDraggingMouse: false,\n      tooltipMargin: 0,\n      crosshairs: '',\n      overlay: '',\n      tooltip: ''\n    };\n  },\n\n  methods: {\n    move: function (e) {\n      this.crossHairsTop = e.clientY;\n      this.crossHairsLeft = e.clientX;\n      var tooltipBoundingRect = this.tooltip.getBoundingClientRect();\n      this.toolTipWidth = tooltipBoundingRect.width;\n      this.toolTipHeight = tooltipBoundingRect.height;\n      /* \n       * Change how the borderWidth is being calculated based on the x and y values.\n       * Calculate the box with the 1px border's positioning and width \n       * Calculate the positioning of the tooltip */\n\n      if (this.mouseIsDown) {\n        var endY = this.endY = e.clientY,\n            endX = this.endX = e.clientX,\n            startX = this.startX,\n            startY = this.startY,\n            windowWidth = this.windowWidth,\n            windowHeight = this.windowHeight; // Calculating the values differently depending on how the user start's dragging.\n\n        if (endX >= startX && endY >= startY) {\n          this.isDragging = true;\n          this.borderWidth = startY + \"px \" + (windowWidth - endX) + \"px \" + (windowHeight - endY) + \"px \" + startX + \"px\";\n          this.boxTop = startY;\n          this.boxLeft = startX;\n          this.boxEndWidth = endX - startX;\n          this.boxEndHeight = endY - startY;\n          this.toolTipLeft = endX;\n          this.toolTipTop = endY;\n\n          if (endX + this.toolTipWidth >= windowWidth) {\n            this.toolTipLeft = windowWidth - this.toolTipWidth - this.tooltipMargin * 2;\n          }\n\n          if (endY + this.toolTipHeight + this.tooltipMargin * 2 >= windowHeight) {\n            this.toolTipTop = windowHeight - this.toolTipHeight - this.tooltipMargin * 2;\n          }\n        } else if (endX <= startX && endY >= startY) {\n          this.isDragging = true;\n          this.borderWidth = startY + \"px \" + (windowWidth - startX) + \"px \" + (windowHeight - endY) + \"px \" + endX + \"px\";\n          this.boxLeft = endX;\n          this.boxTop = startY;\n          this.boxEndWidth = startX - endX;\n          this.boxEndHeight = endY - startY;\n          this.toolTipLeft = endX - this.toolTipWidth;\n          this.toolTipTop = endY;\n\n          if (endX - this.toolTipWidth <= 0) {\n            this.toolTipLeft = this.tooltipMargin;\n          }\n\n          if (endY + this.toolTipHeight + this.tooltipMargin * 2 >= windowHeight) {\n            this.toolTipTop = windowHeight - this.toolTipHeight - this.tooltipMargin * 2;\n          }\n        } else if (endX >= startX && endY <= startY) {\n          this.isDragging = true;\n          this.boxLeft = startX;\n          this.boxTop = endY;\n          this.boxEndWidth = endX - startX;\n          this.boxEndHeight = startY - endY;\n          this.toolTipLeft = endX;\n          this.toolTipTop = endY - this.toolTipHeight;\n          this.borderWidth = endY + \"px \" + (windowWidth - endX) + \"px \" + (windowHeight - startY) + \"px \" + startX + \"px\";\n\n          if (endX + this.toolTipWidth >= windowWidth) {\n            this.toolTipLeft = windowWidth - this.toolTipWidth - this.tooltipMargin * 2;\n          }\n\n          if (endY - this.toolTipHeight <= 0) {\n            this.toolTipTop = this.tooltipMargin;\n          }\n        } else if (endX <= startX && endY <= startY) {\n          this.isDragging = true;\n          this.boxLeft = endX;\n          this.boxTop = endY;\n          this.boxEndWidth = startX - endX;\n          this.boxEndHeight = startY - endY;\n          this.borderWidth = endY + \"px \" + (windowWidth - startX) + \"px \" + (windowHeight - startY) + \"px \" + endX + \"px\";\n          this.toolTipLeft = endX - this.toolTipWidth;\n          this.toolTipTop = endY - this.toolTipHeight;\n\n          if (endX - this.toolTipWidth <= 0) {\n            this.toolTipLeft = this.tooltipMargin;\n          }\n\n          if (endY - this.toolTipHeight <= 0) {\n            this.toolTipTop = this.tooltipMargin;\n          }\n        } else {\n          this.isDragging = false;\n        }\n      }\n    },\n    mouseDown: function (event) {\n      this.startX = event.clientX;\n      this.startY = event.clientY;\n      this.isMouseDown = true;\n    },\n    mouseUp: function () {\n      this.borderWidth = 0; // resetting the overlay\n\n      if (this.isDragging) {\n        // Don't take the screenshot unless the mouse moved somehow.\n        this.tookScreenShot = true;\n      }\n\n      this.isDragging = false;\n      this.mouseIsDown = false;\n      this.takeScreenshot();\n    },\n    takeScreenshot: function () {\n      html2canvas(document.querySelector('body')).then(canvas => {\n        let croppedCanvas = document.createElement('canvas'),\n            croppedCanvasContext = croppedCanvas.getContext('2d');\n        croppedCanvas.width = this.croppedImageWidth;\n        croppedCanvas.height = this.croppedImageHeight;\n        croppedCanvasContext.drawImage(canvas, this.startX, this.startY, this.croppedImageWidth, this.croppedImageHeight, 0, 0, this.croppedImageWidth, this.croppedImageHeight);\n        this.imageUrl = croppedCanvas.toDataURL();\n      });\n    }\n  },\n\n  mounted() {\n    this.crosshairs = document.querySelector(\".crosshairs\");\n    this.overlay = document.querySelector(\".overlay\");\n    this.tooltip = document.querySelector(\".tooltip\");\n    var self = this;\n    this.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    this.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    this.toolTipWidth = self.tooltip.getBoundingClientRect().width; // To recalculate the width and height if the screen size changes.\n\n    window.onresize = function () {\n      self.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      self.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    };\n\n    this.tooltipMargin = this.getComputedStyle(document.getElementsByClassName(\"tooltip\")).margin.split(\"px\")[0];\n  }\n\n};","map":{"version":3,"mappings":"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","names":["html2canvas","test","data","crossHairsLeft","crossHairsTop","startX","startY","isMouseDown","isDraggingMouse","tooltipMargin","crosshairs","overlay","tooltip","methods","move","e","clientY","clientX","tooltipBoundingRect","getBoundingClientRect","toolTipWidth","width","toolTipHeight","height","mouseIsDown","endY","endX","windowWidth","windowHeight","isDragging","borderWidth","boxTop","boxLeft","boxEndWidth","boxEndHeight","toolTipLeft","toolTipTop","mouseDown","event","mouseUp","tookScreenShot","takeScreenshot","document","querySelector","then","canvas","croppedCanvas","createElement","croppedCanvasContext","getContext","croppedImageWidth","croppedImageHeight","drawImage","imageUrl","toDataURL","mounted","self","window","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","onresize","getComputedStyle","getElementsByClassName","margin","split"],"sourceRoot":"","sources":["/home/misa/Coding/test-screenshot/test-screenshot/test-screenshot/src/components/screen-shot.vue"],"sourcesContent":["\n<template>\n<div id=\"screenshot\" class=\"container\" @mousemove=\"move\" @mousedown=\"mouseDown\" @mouseup=\"mouseUp\">\n  \n  <transition name=\"screenshot\">\n    <div class=\"Flash\" v-if=\"tookScreenShot\"></div>\n  </transition>\n  \n  \n  <div class=\"overlay\" :class=\"{ 'highlighting' : mouseIsDown }\" :style=\"{ borderWidth: borderWidth }\" ref=\"overlay\"></div>\n  \n  <div class=\"crosshairs\" :class=\"{ 'hidden' : isDragging }\" :style=\"{ left: crossHairsLeft + 'px', top: crossHairsTop + 'px' }\" ref=\"crosshairs\"></div>\n  \n  <div class=\"borderedBox\" :class=\"{ 'hidden': !isDragging }\" :style=\"{ left: boxLeft + 'px', top: boxTop + 'px', width: boxEndWidth + 'px', height: boxEndHeight + 'px' }\"></div>\n  \n  <span class=\"tooltip\" :class=\"{ 'hidden': !isDragging }\" :style=\"{ left: toolTipLeft + 'px', top: toolTipTop + 'px'}\" ref=\"tooltip\">{{boxEndWidth}} x {{boxEndHeight}}px</span>\n</div>\n</template>\n\n<script>\nimport html2canvas from 'html2canvas'\n/* eslint-disable no-unused-vars */\nvar test\nexport default {\n  data() { return {\n    crossHairsLeft: 0,\n    crossHairsTop: 0,\n    startX: 0,\n    startY: 0,\n    isMouseDown: false,\n    isDraggingMouse: false,\n    tooltipMargin: 0,\n    crosshairs: '',\n    overlay: '',\n    tooltip: ''\n  }\n  },\n\n  methods: {\n\n    move: function (e) {\n      \n      this.crossHairsTop = e.clientY;\n      this.crossHairsLeft = e.clientX;\n      \n      var tooltipBoundingRect = this.tooltip.getBoundingClientRect();\n      \n      this.toolTipWidth = tooltipBoundingRect.width;\n      this.toolTipHeight = tooltipBoundingRect.height;\n      \n      /* \n       * Change how the borderWidth is being calculated based on the x and y values.\n       * Calculate the box with the 1px border's positioning and width \n       * Calculate the positioning of the tooltip */\n      if (this.mouseIsDown) {\n        \n        var endY = this.endY = e.clientY,\n            endX = this.endX = e.clientX,\n            startX = this.startX,\n            startY = this.startY,\n            windowWidth = this.windowWidth,\n            windowHeight = this.windowHeight;\n        \n         // Calculating the values differently depending on how the user start's dragging.\n         if (endX >= startX && endY >= startY) {\n           \n           this.isDragging = true;\n           \n           this.borderWidth = startY + \"px \" + (windowWidth - endX) + \"px \" + (windowHeight - endY) + \"px \" + startX + \"px\";\n          \n           this.boxTop = startY;\n           this.boxLeft = startX;\n           this.boxEndWidth = endX - startX;\n           this.boxEndHeight = endY - startY;\n           \n           this.toolTipLeft = endX;\n           this.toolTipTop = endY;\n           \n           if (endX + this.toolTipWidth >= windowWidth) {\n             this.toolTipLeft = windowWidth - this.toolTipWidth - (this.tooltipMargin * 2);\n           }\n           \n           if (endY + this.toolTipHeight + (this.tooltipMargin * 2) >= windowHeight) {\n             this.toolTipTop = windowHeight - this.toolTipHeight - (this.tooltipMargin * 2);\n           }\n           \n         } else if (endX <= startX && endY >= startY) {\n           \n           this.isDragging = true;\n           \n           this.borderWidth = startY + \"px \" + (windowWidth - startX) + \"px \" + (windowHeight - endY) + \"px \" + endX + \"px\";\n           \n           this.boxLeft = endX;\n           this.boxTop = startY;\n           this.boxEndWidth = startX - endX;\n           this.boxEndHeight = endY - startY;\n           \n           this.toolTipLeft = endX - this.toolTipWidth;\n           this.toolTipTop = endY;\n           \n           if (endX - this.toolTipWidth <= 0) {\n             this.toolTipLeft = this.tooltipMargin;\n           }\n           \n           if (endY + this.toolTipHeight + (this.tooltipMargin * 2) >= windowHeight) {\n             this.toolTipTop = windowHeight - this.toolTipHeight - (this.tooltipMargin * 2);\n           }\n           \n         } else if (endX >= startX && endY <= startY) {\n           \n           this.isDragging = true;\n           \n           this.boxLeft = startX;\n           this.boxTop = endY;\n           this.boxEndWidth = endX - startX;\n           this.boxEndHeight = startY - endY;\n           \n           this.toolTipLeft = endX;\n           this.toolTipTop = endY - this.toolTipHeight;\n           \n           this.borderWidth = endY + \"px \" + (windowWidth - endX) + \"px \" + (windowHeight - startY) + \"px \" + startX + \"px\";\n           \n           if (endX + this.toolTipWidth >= windowWidth) {\n             this.toolTipLeft = windowWidth - this.toolTipWidth - (this.tooltipMargin * 2);\n           }\n           \n           if (endY - this.toolTipHeight <= 0) {\n             this.toolTipTop = this.tooltipMargin;\n           }\n           \n         } else if (endX <= startX && endY <= startY) {\n           \n           this.isDragging = true;\n           \n           this.boxLeft = endX;\n           this.boxTop = endY;\n           this.boxEndWidth = startX - endX;\n           this.boxEndHeight = startY - endY;\n           \n           this.borderWidth = endY + \"px \" + (windowWidth - startX) + \"px \" + (windowHeight - startY) + \"px \" + endX + \"px\";\n           \n           this.toolTipLeft = endX - this.toolTipWidth;\n           this.toolTipTop = endY - this.toolTipHeight;\n           \n           if (endX - this.toolTipWidth <= 0) {\n             this.toolTipLeft = this.tooltipMargin;\n           }\n           \n           if (endY - this.toolTipHeight <= 0) {\n             this.toolTipTop = this.tooltipMargin;\n           }\n           \n         } else {\n           this.isDragging = false;\n         }\n        \n      }\n      \n    },\n\n    mouseDown: function (event) {\n      this.startX = event.clientX;\n      this.startY = event.clientY;\n      this.isMouseDown = true;\n    },\n\n    mouseUp: function () {\n    this.borderWidth = 0; // resetting the overlay\n\n    if (this.isDragging) {\n      // Don't take the screenshot unless the mouse moved somehow.\n      this.tookScreenShot = true;\n    }\n\n    this.isDragging = false;\n    this.mouseIsDown = false;\n\n    this.takeScreenshot();\n\n    },\n\n    takeScreenshot: function () {\n    html2canvas(document.querySelector('body')).then(canvas => {\n      let croppedCanvas = document.createElement('canvas'),\n          croppedCanvasContext = croppedCanvas.getContext('2d');\n\n      croppedCanvas.width  = this.croppedImageWidth;\n      croppedCanvas.height = this.croppedImageHeight;\n\n      croppedCanvasContext.drawImage(canvas, this.startX, this.startY, this.croppedImageWidth, this.croppedImageHeight, 0, 0, this.croppedImageWidth, this.croppedImageHeight);\n\n      this.imageUrl = croppedCanvas.toDataURL();\n    });\n  }\n},\n  mounted() {\n    \n    this.crosshairs = document.querySelector(\".crosshairs\");\n    this.overlay = document.querySelector(\".overlay\");\n    this.tooltip = document.querySelector(\".tooltip\");\n    \n    var self = this;\n    \n    this.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    this.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    \n    this.toolTipWidth = self.tooltip.getBoundingClientRect().width;\n    \n    // To recalculate the width and height if the screen size changes.\n    window.onresize = function () {\n      self.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      self.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    };\n    \n    this.tooltipMargin = this.getComputedStyle(document.getElementsByClassName(\"tooltip\")).margin.split(\"px\")[0]\n    \n  },\n}\n\n</script>\n\n<style>\n/* Foundation */\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\nhtml, body {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n}\n\n.overlay,\n.crosshairs,\n.tooltip,\n.borderedBox {\n  user-select: none;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.overlay.highlighting {\n  background: none;\n  border-color: rgba(0, 0, 0, 0.5);\n  border-style: solid;\n}\n\n.crosshairs {\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  z-index: 2147483645;\n}\n\n.crosshairs.hidden {\n  display: none;\n}\n\n\n.crosshairs::before,\n.crosshairs::after {\n  content: \"\";\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  border: none !important;\n  border-image:  !important;\n}\n\n.crosshairs::before {\n  left: -100%;\n  top: -100%;\n  border-right: 1px solid rgba(255, 255, 255, 0.3) !important;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3) !important;\n}\n\n.crosshairs::after {\n  left: 0px;\n  top: 0px;\n  border-top: 1px solid rgba(255, 255, 255, 0.3) !important;\n  border-left: 1px solid rgba(255, 255, 255, 0.3) !important;\n}\n\n.container {\n  clear: both;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/260969/kendrick-lamar.png\");\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.borderedBox {\n  border: 1px solid #fff;\n  position: absolute;\n}\n\n.borderedBox.hidden {\n  display: none;\n}\n\n.tooltip {\n  \n  display: inline-block;\n  position: absolute;\n  \n  background-color: grey;\n  color: #fff;\n  \n  border-radius: 4px;\n  \n  font-size: 12px;\n  font-family: monospace;\n  \n  padding: 6px;\n  margin: 6px;\n  white-space: nowrap;\n}\n\n.tooltip.hidden {\n  display: none;\n}\n\n.Flash {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  \n  top: 0;\n  left: 0;\n  \n  background-color: #fff;\n  z-index: 2147483646;\n  \n  opacity: 1;\n  \n  animation-delay: 0.2s;\n  animation-name: fade-out;\n  animation-duration: 1s;\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n}\n\n.screenshot-enter-active, .screenshot-leave-active {\n  transition: opacity .2s;\n}\n\n.screenshot-enter, .screenshot-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n@keyframes fade-out {\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}