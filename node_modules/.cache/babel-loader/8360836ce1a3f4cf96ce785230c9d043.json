{"ast":null,"code":"import html2canvas from 'html2canvas';\n/* eslint-disable no-unused-vars */\n\nvar TOOLTIP_MARGIN = +window.getComputedStyle(document.getElementsByClassName(\"tooltip\")).margin.split(\"px\")[0];\nexport default {\n  data() {\n    return {\n      crossHairsLeft: 0,\n      crossHairsTop: 0,\n      startX: 0,\n      startY: 0,\n      isMouseDown: false,\n      isDraggingMouse: false\n    };\n  },\n\n  methods: {\n    move: function (event) {\n      var startY = this.startY,\n          startX = this.startX,\n          endX = event.clientX,\n          endY = event.clientY,\n          windowWidth = window.innerWidth,\n          windowHeight = window.innerHeight;\n      this.crossHairsTop = event.clientY;\n      this.crossHairsLeft = event.clientX;\n\n      if (this.isMouseDown) {\n        if (endX >= startX && endY >= startY) {\n          this.isDragging = true;\n          this.borderWidth = startY + \"px \" + (windowWidth - endX) + \"px \" + (windowHeight - endY) + \"px \" + startX + \"px\";\n        }\n      }\n    },\n    mouseDown: function (event) {\n      this.startX = event.clientX;\n      this.startY = event.clientY;\n      this.isMouseDown = true;\n    },\n    mouseUp: function () {\n      this.borderWidth = 0; // resetting the overlay\n\n      if (this.isDragging) {\n        // Don't take the screenshot unless the mouse moved somehow.\n        this.tookScreenShot = true;\n      }\n\n      this.isDragging = false;\n      this.mouseIsDown = false;\n      this.takeScreenshot();\n    },\n    takeScreenshot: function () {\n      html2canvas(document.querySelector('body')).then(canvas => {\n        let croppedCanvas = document.createElement('canvas'),\n            croppedCanvasContext = croppedCanvas.getContext('2d');\n        croppedCanvas.width = this.croppedImageWidth;\n        croppedCanvas.height = this.croppedImageHeight;\n        croppedCanvasContext.drawImage(canvas, this.startX, this.startY, this.croppedImageWidth, this.croppedImageHeight, 0, 0, this.croppedImageWidth, this.croppedImageHeight);\n        this.imageUrl = croppedCanvas.toDataURL();\n      });\n    }\n  },\n\n  mounted() {\n    let crosshairs = document.querySelector(\".crosshairs\");\n    let overlay = document.querySelector(\".overlay\");\n    let tooltip = document.querySelector(\".tooltip\");\n    var self = this;\n    this.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    this.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    this.toolTipWidth = tooltip.getBoundingClientRect().width; // To recalculate the width and height if the screen size changes.\n\n    window.onresize = function () {\n      self.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      self.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    };\n  }\n\n};","map":{"version":3,"mappings":"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","names":["html2canvas","TOOLTIP_MARGIN","window","getComputedStyle","document","getElementsByClassName","margin","split","data","crossHairsLeft","crossHairsTop","startX","startY","isMouseDown","isDraggingMouse","methods","move","event","endX","clientX","endY","clientY","windowWidth","innerWidth","windowHeight","innerHeight","isDragging","borderWidth","mouseDown","mouseUp","tookScreenShot","mouseIsDown","takeScreenshot","querySelector","then","canvas","croppedCanvas","createElement","croppedCanvasContext","getContext","width","croppedImageWidth","height","croppedImageHeight","drawImage","imageUrl","toDataURL","mounted","crosshairs","overlay","tooltip","self","documentElement","clientWidth","body","clientHeight","toolTipWidth","getBoundingClientRect","onresize"],"sourceRoot":"","sources":["/home/misa/Coding/test-screenshot/test-screenshot/test-screenshot/src/components/screen-shot.vue"],"sourcesContent":["\n<template>\n<div id=\"screenshot\" class=\"container\" @mousemove=\"move\" @mousedown=\"mouseDown\" @mouseup=\"mouseUp\">\n  \n  <transition name=\"screenshot\">\n    <div class=\"Flash\" v-if=\"tookScreenShot\"></div>\n  </transition>\n  \n  \n  <div class=\"overlay\" :class=\"{ 'highlighting' : mouseIsDown }\" :style=\"{ borderWidth: borderWidth }\"></div>\n  \n  <div class=\"crosshairs\" :class=\"{ 'hidden' : isDragging }\" :style=\"{ left: crossHairsLeft + 'px', top: crossHairsTop + 'px' }\"></div>\n  \n  <div class=\"borderedBox\" :class=\"{ 'hidden': !isDragging }\" :style=\"{ left: boxLeft + 'px', top: boxTop + 'px', width: boxEndWidth + 'px', height: boxEndHeight + 'px' }\"></div>\n  \n  <span class=\"tooltip\" :class=\"{ 'hidden': !isDragging }\" :style=\"{ left: toolTipLeft + 'px', top: toolTipTop + 'px'}\">{{boxEndWidth}} x {{boxEndHeight}}px</span>\n</div>\n</template>\n\n<script>\nimport html2canvas from 'html2canvas'\n/* eslint-disable no-unused-vars */\nvar TOOLTIP_MARGIN = +window.getComputedStyle(document.getElementsByClassName(\"tooltip\")).margin.split(\"px\")[0];\nexport default {\n  data() { return {\n    crossHairsLeft: 0,\n    crossHairsTop: 0,\n    startX: 0,\n    startY: 0,\n    isMouseDown: false,\n    isDraggingMouse: false\n  }\n  },\n\n  methods: {\n\n    move: function (event) {\n             var startY       = this.startY,\n          startX       = this.startX,\n          endX         = event.clientX,\n          endY         = event.clientY,\n          windowWidth  = window.innerWidth,\n          windowHeight = window.innerHeight\n      this.crossHairsTop = event.clientY;\n      this.crossHairsLeft = event.clientX;\n            if (this.isMouseDown) {\n        if (endX >= startX && endY >= startY) {\n          this.isDragging = true;\n          this.borderWidth = startY + \"px \" + (windowWidth - endX) + \"px \" + (windowHeight - endY) + \"px \" + startX + \"px\";\n        }\n      }\n    },\n\n    mouseDown: function (event) {\n      this.startX = event.clientX;\n      this.startY = event.clientY;\n      this.isMouseDown = true;\n    },\n\n    mouseUp: function () {\n    this.borderWidth = 0; // resetting the overlay\n\n    if (this.isDragging) {\n      // Don't take the screenshot unless the mouse moved somehow.\n      this.tookScreenShot = true;\n    }\n\n    this.isDragging = false;\n    this.mouseIsDown = false;\n\n    this.takeScreenshot();\n\n    },\n\n    takeScreenshot: function () {\n    html2canvas(document.querySelector('body')).then(canvas => {\n      let croppedCanvas = document.createElement('canvas'),\n          croppedCanvasContext = croppedCanvas.getContext('2d');\n\n      croppedCanvas.width  = this.croppedImageWidth;\n      croppedCanvas.height = this.croppedImageHeight;\n\n      croppedCanvasContext.drawImage(canvas, this.startX, this.startY, this.croppedImageWidth, this.croppedImageHeight, 0, 0, this.croppedImageWidth, this.croppedImageHeight);\n\n      this.imageUrl = croppedCanvas.toDataURL();\n    });\n  }\n},\n  mounted() {\n    \n    let crosshairs = document.querySelector(\".crosshairs\");\n    let overlay = document.querySelector(\".overlay\");\n    let tooltip = document.querySelector(\".tooltip\");\n    \n    var self = this;\n    \n    this.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    this.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    \n    this.toolTipWidth = tooltip.getBoundingClientRect().width;\n    \n    // To recalculate the width and height if the screen size changes.\n    window.onresize = function () {\n      self.windowWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      self.windowHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n    };\n    \n    \n    \n  },\n}\n\n</script>\n\n<style>\n/* Foundation */\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\nhtml, body {\n  padding: 0;\n  margin: 0;\n  height: 100%;\n}\n\n.overlay,\n.crosshairs,\n.tooltip,\n.borderedBox {\n  user-select: none;\n}\n\n.overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.overlay.highlighting {\n  background: none;\n  border-color: rgba(0, 0, 0, 0.5);\n  border-style: solid;\n}\n\n.crosshairs {\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  z-index: 2147483645;\n}\n\n.crosshairs.hidden {\n  display: none;\n}\n\n\n.crosshairs::before,\n.crosshairs::after {\n  content: \"\";\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  border: none !important;\n  border-image:  !important;\n}\n\n.crosshairs::before {\n  left: -100%;\n  top: -100%;\n  border-right: 1px solid rgba(255, 255, 255, 0.3) !important;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3) !important;\n}\n\n.crosshairs::after {\n  left: 0px;\n  top: 0px;\n  border-top: 1px solid rgba(255, 255, 255, 0.3) !important;\n  border-left: 1px solid rgba(255, 255, 255, 0.3) !important;\n}\n\n.container {\n  clear: both;\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/260969/kendrick-lamar.png\");\n  background-repeat: no-repeat;\n  background-size: cover;\n}\n\n.borderedBox {\n  border: 1px solid #fff;\n  position: absolute;\n}\n\n.borderedBox.hidden {\n  display: none;\n}\n\n.tooltip {\n  \n  display: inline-block;\n  position: absolute;\n  \n  background-color: grey;\n  color: #fff;\n  \n  border-radius: 4px;\n  \n  font-size: 12px;\n  font-family: monospace;\n  \n  padding: 6px;\n  margin: 6px;\n  white-space: nowrap;\n}\n\n.tooltip.hidden {\n  display: none;\n}\n\n.Flash {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  \n  top: 0;\n  left: 0;\n  \n  background-color: #fff;\n  z-index: 2147483646;\n  \n  opacity: 1;\n  \n  animation-delay: 0.2s;\n  animation-name: fade-out;\n  animation-duration: 1s;\n  animation-iteration-count: 1;\n  animation-fill-mode: forwards;\n}\n\n.screenshot-enter-active, .screenshot-leave-active {\n  transition: opacity .2s;\n}\n\n.screenshot-enter, .screenshot-leave-to /* .fade-leave-active below version 2.1.8 */ {\n  opacity: 0;\n}\n\n@keyframes fade-out {\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0;\n  }\n}\n</style>"]},"metadata":{},"sourceType":"module"}